Next-Level Debugging With Chrome Devtools & Breakpoints
-------------------------------------------------------
- Breakpoints informs the browser to stop code execution
    - When certain part of the code (defined breakpoint) is reached 
    - Allows to look at the code's current state of execution

    - It provides the following controls:
        - To step into a function call
            - To go through the current function code line-by-line

        - To step over next function call
            - Meant moving to the next line of code
            - Does NOT go into the function

        - To step out of current function
            - Moves out of the current function call

        - Step
            - Moves to the next line of code
            - If next line is a function
                - It goes into the function
                - Executes its code line-by-line


- To place a breakpoint 
    - Inside the browser's Source tab
        - Click the targeted line number
        - Placing multiple breakpoints is possible

    - Defining a conditional breakpoint is also possible
        - 


- The Scope tab 
    - Displays the current values of associated variables


- The Watch tab
    - Allows to add an expression using
        - Name of the variable
        - Mathematical expression involving variables

    - To watch certain value(s)

    - NOTE: Everything will be lost 
        - When reloading the web page 
        - After a function completes its execution


- The Call Stack tab
    - Provide a list of functions that have been called
        - The topmost item is the one currently running
        - Below is/are the function(s) is/are responsible for calling the current function


- The Event Listener Breakpoints tab
    - Defines a breakpoint based on event listener
    - Halts code execution everytime a selected event listener is triggered
