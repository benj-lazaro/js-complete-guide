Understanding the DOM and how it's created
------------------------------------------
- When the browser "reads" or parses an HTML document
    - Behind the scenes, it creates an object representation of each element and content
    
    - The browser does NOT work directly with the actual text (i.e. HTML code)
        - Instead works with the objects stored in memory
            - These objects are referred to as "Nodes"

        - HTML tags are translated into "Element" nodes
        - Content are translated into "Text" nodes
            - These include the un-rendered whitespace character preceeding a "Text" node
            - These are represented as indents

    - The browser organizes these nodes into a tree
        - Where the "HTML" nodes is the top-most and has the following child nodes
            - "HEAD" node
                - It has direct children nodes of "META", "TITLE" and "SCRIPT"

            - "BODY" node
                - It has direct children nodes of "HEADER", "MAIN"

    - The tree mirrors the structure of the parsed HTML docment
        - The browser keeps track of the parent-child relations
            - Between different elements


- To witness how the browser "reads"  / parses the DOM
    - Load the example file "index.html" on the browser

    - Launch the browser's Dev Tools

    - Click the "Elements" tab
        - Returns a human-readable representation of the DOM 
        - Looks just like the HTML code 
        - This is what developers and users interact with


- The "$0" seen in the DOM under the "Elements" tab
    - It is a brower-specific Dev Tools feature and NOT JavaScript

    - It refers to the recent "Element" node that was clicked or selected
        - Typing "$0" on the "Console" tab
        - Return the corresponding "Element" node that was recently clicked or selected earlier
    
    - Passing "$0" as argument value of console.dir()
        - Returns the properties of the corresponding "Element" node
