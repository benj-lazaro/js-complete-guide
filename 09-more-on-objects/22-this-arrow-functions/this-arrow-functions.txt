this And The Arrow Functions
----------------------------
- Behind the scenes, the browser is the one that triggers an event (e.g. click)
    - When a DOM element with an assigned event listener is called
    - If the associated callback function (i.e. event handler) is defined as a normal function
    - Then the browser binds the value of "this" to the said DOM element

    - HOWEVER, if the callback function is an arrow function
        - Then the browser refers the value of "this" to the global Window object
    
    - NOTE: Arrow functions do NOT assign / bind the value of this to anything
        - Even when the code is in strict mode, it will NOT yield an "undefined" value

        - Despite being called within an arrow function
            - The value of "this" refers to the global Window object
            - Does NOT refer to the object that called the arrow function (method)


- An object with a method defined as a normal function
    - Contains a code that uses an arrow function as callback for the forEach() method
        - The value of "this" refers to the object that called the method

        - The arrow function does NOT change the binding of "this"
            - Instead "this" refers to the object outside of its own (function)

            - Namely the object where the method (a normal function)
                - Calls the forEach() and the corresponding callback arrow function


    - Contains a code that uses a normal function as callback for the forEach() method
        - The value of "this" refers to undefined
            
        - The normal function binds the value of "this" to the forEach() method
            - The forEach() method is triggered by the browser
            - "this" refers to the global Window object

            - Yielding a value of "undefined" (in non-strict mode)
            - Yields a TypeError (in strict mode)
