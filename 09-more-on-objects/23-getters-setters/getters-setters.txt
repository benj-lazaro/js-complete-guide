Getters And Setters
-------------------
- Both getters & setters are special kind of object property


- A getter uses the get keyword
    - This binds an object property to a function
    - A function that will be called when that property is looked up
    - Reference (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get)


Syntax:

{ get prop() { /* … */ } }
{ get [expression]() { /* … */ } }


- A setter uses the set keyword
    - This binds an object property to a function
    - A function that will be called when there is an attempt to set that property
    - Reference (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)


    - It can accept parameter(s) that hold the value(s) to be set to a property

    - Use case:
        - To validate a user input prior being assigned as a value to an object's property
            - It can immediately return to the calling statement if value is falsy
            - Or throw an error to stop code execution or trigger an try-catch statement

Syntax:

{ set prop(val) { /* … */ } }
{ set [expression](val) { /* … */ } }
